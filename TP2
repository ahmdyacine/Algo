#include <stdio.h>
#include <stdlib.h>
#include <string.h>

// charger la chaine
char *Chargerchaine(int N) {
    if (N <= 0) {
        printf("Invalid input size.\n");
        return NULL;
    }

    char *p = (char *)malloc((N + 1) * sizeof(char));
    if (p == NULL) {
        printf("Erreur d'allocation mÃ©moire\n");
        return NULL;
    }

    printf("Entrer une chaine de caracteres  : ");
    fgets(p, N + 1, stdin);
    if (fgets(p, N + 1, stdin) == NULL) {
        printf("Erreur de lecture\n");
        free(p);
        return NULL;
    }

    // Find and remove trailing newline, if any
    for (int i = 0; i < N + 1; i++) {
        if (p[i] == '\n') {
            p[i] = '\0';
            break;
        }
        if (p[i] == '\0') {
            break;
        }
    }

    return p;
}


// la longueur de la chaine
int longueur(char *p) {
    int i = 0;
    while (p[i] != '\0') {
        i++;
    }
    return i;
}

//charger un tablaeu
void chargerTab(char *p,char Tab[]) {
  int i = 0;


   
    while (p[i] != '\0') {
        Tab[i] = p[i];
        i++;
    }



   Tab[i] = '\0';




}



//Inverser tableaux
void inverserTab(char Tab[],char T[],int m) {

 int i;


 for(i = 0;i < m;i++) {

    
     T[i] = Tab[m-1-i];


 }


      T[m] = '\0';



}


//Affichage d'un tablau
void AfficherTab(char Tab[], int m) {

 int j;

 for(j = 0;j < m  ;j++) {

     printf("%c",Tab[j]);

 }
  printf("\n");
}


int main() {
    int n, m;
    char *ch;

    printf("Entrer la taille maximale de la chaine : ");
    scanf("%d", &n);
    

    ch = Chargerchaine(n);
    m = longueur(ch);
    char tab[m],t[m];
    chargerTab(ch,tab);
    inverserTab(tab,t,m);
    AfficherTab(tab,m);
    AfficherTab(t,m);
    free(ch);
    return 0;
}
